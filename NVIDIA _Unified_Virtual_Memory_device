# NVIDIA Unified Virtual Memory device

```
NVIDIA UVM architecture in your 4-GPU environment:

┌─────────────────────────────────────────────────────────────────────────┐
│                           YOUR SYSTEM ARCHITECTURE                       │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  USER SPACE APPLICATIONS                                                │
│  ┌──────────────────┐  ┌──────────────────┐  ┌───────────────────┐    │
│  │  Hawkes Engine   │  │   CUDA Programs  │  │   nvidia-smi      │    │
│  │  (Your Code)     │  │                  │  │                   │    │
│  └────────┬─────────┘  └────────┬─────────┘  └────────┬─────────┘    │
│           │                      │                      │              │
│  ─────────┴──────────────────────┴──────────────────────┴───────────   │
│                                                                          │
│  CUDA RUNTIME API (libcudart.so)                                       │
│  ┌──────────────────────────────────────────────────────────────────┐  │
│  │  cudaMalloc, cudaMemcpy, cudaLaunch, etc.                        │  │
│  └──────────────────┬───────────────────────────────────────────────┘  │
│                     │                                                   │
│  ─────────────────────────────────────────────────────────────────────  │
│                                                                          │
│  CUDA DRIVER API (libcuda.so)                                          │
│  ┌──────────────────────────────────────────────────────────────────┐  │
│  │  Low-level GPU management                                         │  │
│  └──────────────────┬───────────────────────────────────────────────┘  │
│                     │                                                   │
├─────────────────────┼────────────────────────────────────────────────┤
│  KERNEL SPACE       │                                                   │
│                     ▼                                                   │
│  ┌──────────────────────────────────────────────────────────────────┐  │
│  │                    NVIDIA KERNEL MODULES                          │  │
│  │  ┌─────────────┐  ┌─────────────┐  ┌──────────────────────────┐ │  │
│  │  │   nvidia    │  │nvidia_modeset│ │    nvidia_uvm             │ │  │
│  │  │  (Core GPU) │  │  (Display)   │ │ (Unified Virtual Memory)  │ │  │
│  │  └──────┬──────┘  └──────┬───────┘ └────────┬─────────────────┘ │  │
│  └─────────┼─────────────────┼──────────────────┼────────────────────┘  │
│            │                 │                  │                       │
│  ─────────┼─────────────────┼──────────────────┼─────────────────────  │
│  DEVICE FILES (in /dev/)     │                  │                       │
│            │                 │                  │                       │
│  ┌─────────▼──────┐ ┌───────▼────────┐ ┌──────▼──────────┐           │
│  │ /dev/nvidia0-3 │ │/dev/nvidia-modeset│ │ /dev/nvidia-uvm │ ← ERROR │
│  │  (GPU devices) │ │                │ │    (I/O Error)   │           │
│  └────────────────┘ └────────────────┘ └──────────────────┘           │
│                                                                          │
├─────────────────────────────────────────────────────────────────────────┤
│                         PHYSICAL HARDWARE                               │
│  ┌──────────┐  ┌──────────┐  ┌──────────┐  ┌──────────┐              │
│  │  GPU 0   │  │  GPU 1   │  │  GPU 2   │  │  GPU 3   │              │
│  │ RTX 3070 │  │ RTX 3070 │  │ RTX 3070 │  │ RTX 3070 │              │
│  │  8GB     │  │  8GB     │  │  8GB     │  │  8GB     │              │
│  └──────────┘  └──────────┘  └──────────┘  └──────────┘              │
└─────────────────────────────────────────────────────────────────────────┘
```
## What is NVIDIA UVM (Unified Virtual Memory)?
UVM is a memory management system that allows:

Unified Address Space: CPU and GPU share a single virtual address space

Automatic Migration: Data automatically moves between CPU RAM and GPU VRAM as needed

Simplified Programming: You can use regular pointers instead of managing separate CPU/GPU memory

```
Without UVM:                         With UVM:
─────────────                        ────────────
CPU Memory: int* h_data              int* data (works on both!)
GPU Memory: int* d_data              
cudaMemcpy(d_data, h_data, ...)     No explicit copies needed!
```
## Why the I/O Error Happens:

```
Your Current Problem:
────────────────────
1. nvidia-smi works     → nvidia.ko loaded ✓
2. GPUs visible         → /dev/nvidia0-3 working ✓
3. CUDA fails           → /dev/nvidia-uvm broken ✗

The nvidia_uvm module creates /dev/nvidia-uvm
When CUDA runtime starts, it needs this device for:
- Memory page migration
- Unified addressing
- GPU memory allocation tracking
```
### Fix Sequence

```
# 1. Check current state
ls -la /dev/nvidia-uvm
# Shows: crw-rw-rw- 1 root root 503, 0 ... (but gives I/O error)

# 2. Check if module is loaded
lsmod | grep nvidia_uvm
# If not shown or shows 0 usage, it's the problem

# 3. Reload the module
sudo rmmod nvidia_uvm
sudo modprobe nvidia_uvm

# 4. Verify it created the device properly
sudo nvidia-modprobe -u -c=0

# 5. Test
./test_cuda_init
```

